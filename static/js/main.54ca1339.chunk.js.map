{"version":3,"sources":["SquareComponent.js","App.js","reportWebVitals.js","index.js"],"names":["SquareComponent","props","classes","className","onClick","state","initialState","App","useState","gameState","updateGameState","isXChance","updateIsXChance","winnerStatus","updateWinnerState","onSquareClicked","index","strings","Array","from","useEffect","winner","checkWinner","lines","console","log","i","length","a","b","c","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.54ca1339.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nconst SquareComponent = (props)=> {\r\n    // const classes = (props.className ? `${props.className} square` : `square`)\r\n    // var age =19;\r\n    // (age=>20) ? console.log('can drive') : console.log('you cannot');\r\n    const classes=(props.className ? `${props.className} square` : `square`)\r\n\r\n  return (\r\n    <span className={classes} onClick={props.onClick}>\r\n         {props.state}\r\n    </span>\r\n  );\r\n}\r\n\r\nexport default SquareComponent;\r\n","import React,{useState, useEffect} from 'react';\nimport './App.css';\nimport SquareComponent from './SquareComponent';\nconst initialState=[\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\"];\n\nconst onSquareClicked = (index) =>{\n\n}\n\nconst App= ()=> {\n  const [gameState, updateGameState] = useState(initialState);\n  const [isXChance, updateIsXChance] = useState(false);\n  const [winnerStatus, updateWinnerState] = useState();\n\n\n  const onSquareClicked = (index) =>{\n    let strings = Array.from(gameState);\n    strings[index]= isXChance?'X':'O';\n    updateGameState(strings);\n    updateIsXChance(!isXChance);\n  }\n\n   \n    useEffect(() => {\n        let winner = checkWinner();\n        if (winner) {\n            updateWinnerState(`${winner} won the Game !`)\n        }\n       \n    }, [gameState])\n\n  const checkWinner = () => {\n        const lines = [\n            [0, 1, 2],\n            [3, 4, 5],\n            [6, 7, 8],\n            [0, 3, 6],\n            [1, 4, 7],\n            [2, 5, 8],\n            [0, 4, 8],\n            [2, 4, 6],\n        ];\n        console.log('Class: App, Function: checkWinner ==', gameState[0], gameState[1], gameState[2]);\n        for (let i = 0; i < lines.length; i++) {\n            const [a, b, c] = lines[i];\n            if (gameState[a] && gameState[a] === gameState[b] && gameState[a] === gameState[c]) {\n                return gameState[a];\n            }\n        }\n        return null;\n    }\n\n  return (\n    <div className=\"App-header\">\n     <p className='heading-text'>React Tic Tac Toe {winnerStatus}</p>\n     <div className=\"row jc-center\">\n      <SquareComponent className=\"b-bottom-right\" state={gameState[0]} onClick={()=>onSquareClicked(0)}/>\n      <SquareComponent className=\"b-bottom-right\" state={gameState[1]} onClick={()=>onSquareClicked(1)}/>\n      <SquareComponent className=\"b-bottom\" state={gameState[2]} onClick={()=>onSquareClicked(2)}/>\n     </div>\n     <div className=\"row jc-center\">\n      <SquareComponent className=\"b-bottom-right\" state={gameState[3]} onClick={()=>onSquareClicked(3)}/>\n      <SquareComponent className=\"b-bottom-right\" state={gameState[4]} onClick={()=>onSquareClicked(4)}/>\n      <SquareComponent className=\"b-bottom\" state={gameState[5]} onClick={()=>onSquareClicked(5)}/>\n     </div>\n     <div className=\"row jc-center\">\n      <SquareComponent className=\"b-right\" state={gameState[6]} onClick={()=>onSquareClicked(6)}/>\n      <SquareComponent className=\"b-right\" state={gameState[7]} onClick={()=>onSquareClicked(7)}/>\n      <SquareComponent state={gameState[8]} onClick={()=>onSquareClicked(8)}/>\n     </div>\n     <button className='clear-button' onClick={()=>updateGameState(initialState)}>Clear Game</button>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}